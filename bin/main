#!/usr/bin/env ruby
require_relative('../lib/game_logic')
require_relative('../lib/player')
require_relative('../lib/board')

class Game
  include GameLogic
  attr_accessor :game_board

  def initialize
    @turns = []
    @player1_turn = []
    @player2_turn = []
    @win_sequence = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]
    @win = false
    @game_over = false
    @game_board = [1, 2, 3, 4, 5, 6, 7, 8, 9]
  end

  private

  def display_board
    puts '+---+---+---+'
    puts "| #{@game_board[0]} | #{@game_board[1]} | #{@game_board[2]} |"
    puts '+---+---+---+'
    puts "| #{@game_board[3]} | #{@game_board[4]} | #{@game_board[5]} |"
    puts '+---+---+---+'
    puts "| #{@game_board[6]} | #{@game_board[7]} | #{@game_board[8]} |"
    puts '+---+---+---+'
  end

  def game_intro
    puts 'WELCOME TO TIC TAC TOE!'
    puts
    puts 'THIS BELOW WILL BE YOUR GAMEBOARD!'
    puts

    puts 'Player 1 Enter your name'
    @player1 = gets.chomp
    until Board.player_name(@player1)
      puts 'Name needs to be longer than 3 letters'
      @player1 = gets.chomp
    end
    sleep(1)

    puts 'Player 2 Enter your name'
    @player2 = gets.chomp
    until Board.player_name(@player2)
      puts 'Name needs to be longer than 3 letters'
      @player2 = gets.chomp
    end

    puts

    @first_player = Player.new(@player1, 'X')
    @second_player = Player.new(@player2, 'O')

    puts "#{@player1} you will be playing with the symbol 'X'."
    puts
    puts "#{@player2} you will be playing with the symbol 'O'."
    puts
    puts 'Get ready to start the game'
  end

  def draw
    puts "IT'S A DRAW, GAME OVER! BETTER LUCK NEXT TIME"
  end

  def player1_wins
    puts "#{@player1} is the winner. Congratulations!"
  end

  def player2_wins
    puts "#{@player2} is the winner. Congratulations!"
  end

  def player1_turn
    puts "It's #{@player1}'s turn to play"
    puts 'Please select an available cell from the board(1-9)'
    player1_num = gets.chomp
    loop do
      GameLogic.user_position = true
      puts 'Invalid move! Please pick a number between 1 & 9:'
    unless 
      print "It's already taken. Please choose another position: " 
    end
  end

  def player2_turn
    puts "It's #{@player2}'s turn to play"
    puts 'Please select an available cell from the board(1-9)'
    player2_num = gets.chomp
    if user_position(player2_num) == false
      puts 'Invalid move! Please pick a number between 1 & 9:'
    else user_position(player2_num) == true
         @game_board[position - 1] = 'O'
         display_board
    end
  end

  def game_flow
    count = 0
    while count < 9
      player1_turn
      count_turns
      count += 1
      winner
      break if c == 9 || @win == true

      player2_turn
      count_turns
      count += 1
      winner
      break if @win == true
    end
    draw unless @win == true
    display_board
end

public

  def play 
    display_board
    game_intro
    display_board
    game_flow
  end

  end

end
  new_game = Game.new
  new_game.play
